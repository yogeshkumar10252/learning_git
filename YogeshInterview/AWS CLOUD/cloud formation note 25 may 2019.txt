cloud formation note 25 may 2019

Cloudformation Templates
Why Template?
 * Is Reusability
   Portable
   DRY (Dont Repeat Yourself)

AWS Templating System
  This is Cloudformation
  It can be written in json/yaml

Building blocks

AWSTemplateFormatVersion:
{
    "AWSTemplateFormatVersion": "2010-09-09"
    # This describes the version of schema of CF
}
Description: This is just a field to add som info
{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Learing Cloudformation"
}
Resources:
Everything for CF to be create in AWS is a Resource
This section is collection of resources to be created
{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Learing Cloudformation"
    "Resources": {
        "<yournameforresource>" :{
            "Type": "<from aws documentation>"
            "Properties" : {

            }
        }
    }
}

* Outputs: The stuff which you want to display after successful creation of stack

 * Every Resource has inputs & outputs
 * Resource inputs are properties
 * Resource outputs are Return Values

Sofwares Required
 * AWS CLI installed
 * Visual Studio Code with Cloudformation extension

Terms
 * Template: Json/Yaml file written
 * Stack: Execution of Template creates stack
 * StackSet: Execution of same template across regions at one shot

Example: 1

{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS cloud formulation",
    "Resources": {
        "ntier": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.10.0.0/16",
                "Tags": [
                    {
                        "Key": "Name",
                        "value": "from vpc"
                    }
                ]
            }
        }
    }
}





Example: 2

{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "cloud formulation",
    "Resources": {
        "yogesh": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.10.0.0/16",
                "Tags": [
                    {
                        "key": "name",
                        "value": "From CF"
                    }
                ]
            }
        },
        "websubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "yogesh"
                },
                "CidrBlock": "10.10.0.0/24",
                "Tags": [
                    {
                        "key": "name",
                        "value": "web"
                    }
                ]
            }
        },
        "dbsubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "yogesh"
                },
                "CidrBlock": "10.10.1.0/24",
                "Tags": [
                    {
                        "key": "name",
                        "value": "db"
                    }
                ]
            }
        }
        
    }
}















Example: 3
{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS cloud formulation",
    "Resources": {
        "ntier": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.10.0.0/16",
                "Tags": [
                    {
                        "Key": "Name",
                        "value": "from vpc"
                    }
                ]
            }
        },
        "websubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {"Ref": "ntier"},
                "CidrBlock": "10.10.0.0/24",
                "Tags": [
                    {
                        "key": "name",
                        "value": "public subnet"
                    }
                ]
            }
        },
        "dbsubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {"Ref": "ntier" },
                "CidrBlock": "10.10.1.0/24",
                "Tags": [
                    {
                        "key": "name",
                        "value": "private subnet"
                    }
                ]
            }
        },
        "allow ssh": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "allow all",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 80,
                        "ToPort": 80,
                        "CidrIp": "0.0.0.0/0"
                    },
                   {
                        "IpProtocol": "ssh",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "VpcId": {
                    "Ref": "ntier"
                },
                "Tags": [
                    {
                        "key": "name",
                        "value": "shelu"
                    }
                ],
            }
        },
        "docker": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": "autoscaling",
                "DisableApiTermination": "-",
                "ImageId": "ami-005bdb005fb00e791",
                "InstanceType": "t2.micro",
                "Monitoring": "true|false",
                "SecurityGroupIds": [
                    {
                        "Ref": "allow ssh"
                    }
                ],
                "Tags": [
                    {
                        "Key": "name",
                        "Value": "docker machine"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -ex",
                                "sudo apt-get install apache2 -y"
                            ]
                        ]
                    }
                }           }  },
        "Output": {
            "vpcid": {
                "Value": {"Ref": "ntier"}
            },
            "websubnetid": {
                "Value": {"Ref": "websubnet"}  },          }
    
       
    }
}
        




Example: 4

{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "cloud formulation",
    "Resources": {
        "yogesh": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.10.0.0/16",
                "Tags": [
                    {
                        "key": "name",
                        "value": "From CF"
                    }
                ]
            }
        },
        "websubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "yogesh"
                },
                "CidrBlock": "10.10.0.0/24",
                "Tags": [
                    {
                        "key": "name",
                        "value": "web"
                    }
                ]
            }
        },
        "dbsubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "yogesh"
                },
                "CidrBlock": "10.10.1.0/24",
                "Tags": [
                    {
                        "kay": "name",
                        "value": "db"
                    }
                ]
            }
        },
        "Outputs": {
            "VPC": {
                "Value": {"Ref": "yogesh"}
            },
            "websubnetid": {
                "Value": {"Ref": "websubnet" }
            },
            "dbsubnetid": {
                "Value": {"Ref": "dbsubnet"}
            }
        }
    }
}